{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azuredatafactory0102"
		},
		"Azure_Sql_sales_Database01_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Azure_Sql_sales_Database01'"
		},
		"Linked_service_for_AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Linked_service_for_AzureDataLakeStorage1'"
		},
		"Azure_Sql_sales_Database01_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sales-0120-server.database.windows.net"
		},
		"Azure_Sql_sales_Database01_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Sales_DB"
		},
		"Azure_Sql_sales_Database01_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "syam's_saledb"
		},
		"Linked_service_for_AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageaccoutnazure.dfs.core.windows.net/"
		},
		"Linked_service_for_Azure_sql_db_02_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sales-0120-server.database.windows.net"
		},
		"Linked_service_for_Azure_sql_db_02_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azure_db_for_testing"
		},
		"Linked_service_for_Azure_sql_db_02_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "syam's_saledb"
		},
		"Linked_service_for_HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com"
		},
		"Linked_service_for_azure_key_vault_sql_db_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://azurevaultforadf.vault.azure.net/"
		},
		"Schedule trigger_properties_Pipeline_for_http_rest_api_file_transfer_parameters_loop_value": {
			"type": "array",
			"defaultValue": [
				{
					"name": "AdventureWorks_Returns.csv"
				},
				{
					"name": "AdventureWorks_Products.csv"
				},
				{
					"name": "AdventureWorks_Sales_2016.csv"
				},
				{
					"name": "AdventureWorks_Territories.csv"
				},
				{
					"name": "AdventureWorks_Sales_2017.csv"
				}
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/EXECUTE_Pipeline_to_load_AZ_sql_db_data_to_ADLS_with_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pipeline_to_load_AZ_sql_db_data_to_ADLS_with_CDC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Schema": "source",
								"table": "Orders"
							}
						}
					},
					{
						"name": "Alerts",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "https://prod-39.southeastasia.logic.azure.com:443/workflows/484734130c55485c9933a4053cdeb094/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=PExaDiOldqOXucswO2dsfosLZlWfwV4mFc8l9rqkXGM",
								"type": "Expression"
							},
							"body": {
								"value": "{\n    \"pipeline_name\"  : \"@{pipeline().Pipeline}\",\n    \"pipeline_runId\" : \"@{pipeline().RunId}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SQL DB To Parquet Incremental  Pipeline/Execution"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline_to_load_AZ_sql_db_data_to_ADLS_with_CDC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_for_http_rest_api_file_transfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline copies 5 different  files from a http link with a single copy activity",
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.loop_value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_for_http_server_rest_api",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Dataset_for_adls_gen2_destination",
											"type": "DatasetReference",
											"parameters": {
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												},
												"p_folder": "gitdatasets",
												"p_container": "destination"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"loop_value": {
						"type": "array",
						"defaultValue": [
							{
								"name": "AdventureWorks_Returns.csv"
							},
							{
								"name": "AdventureWorks_Products.csv"
							},
							{
								"name": "AdventureWorks_Sales_2016.csv"
							},
							{
								"name": "AdventureWorks_Territories.csv"
							},
							{
								"name": "AdventureWorks_Sales_2017.csv"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataset_for_http_server_rest_api')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_for_adls_gen2_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_to_inject_data_to_sql_db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline is to load data to sql db not for Prod",
				"activities": [
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.file_name_loops",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Dataset_for_adls_gen2_destination",
											"type": "DatasetReference",
											"parameters": {
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												},
												"p_folder": "triggerdata",
												"p_container": "source"
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "ForEach1",
									"type": "ForEach",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Get Metadata1').output.childItems",
											"type": "Expression"
										},
										"activities": [
											{
												"name": "Copy data for Azure sql DB",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "upsert",
														"upsertSettings": {
															"useTempDB": true,
															"keys": [
																"SalesTerritoryKey"
															]
														},
														"sqlWriterUseTableLock": true,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "SalesTerritoryKey",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "SalesTerritoryKey",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "Region",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "Region",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "Country",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "Country",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "Continent",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "Continent",
																	"type": "String",
																	"physicalType": "varchar"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "Dataset_for_adls_gen2_destination",
														"type": "DatasetReference",
														"parameters": {
															"p_file": {
																"value": "@item().name",
																"type": "Expression"
															},
															"p_folder": "triggerdata",
															"p_container": "source"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "AzureSqlTable1",
														"type": "DatasetReference",
														"parameters": {
															"Table_name": {
																"value": "@variables('FileToTableMapping')[item().name]",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"file_name_loops": {
						"type": "array",
						"defaultValue": [
							{
								"name": "AdventureWorks_Returns.csv"
							},
							{
								"name": "AdventureWorks_Products.csv"
							},
							{
								"name": "AdventureWorks_Sales_2016.csv"
							},
							{
								"name": "AdventureWorks_Territories.csv"
							},
							{
								"name": "AdventureWorks_Sales_2017.csv"
							}
						]
					}
				},
				"variables": {
					"FileToTableMapping": {
						"type": "String",
						"defaultValue": "{\"AdventureWorks_Returns.csv\": \"Sales_Returns\",\"AdventureWorks_Sales_2016.csv\": \"Sales_table\",\"AdventureWorks_Sales_2017.csv\": \"Sales_table\",\"AdventureWorks_Territories.csv\": \"SalesTerritory\",\"AdventureWorks_Products.csv\": \"Products\"}"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_for_adls_gen2_destination')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_to_load_AZ_sql_db_data_to_ADLS_with_CDC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will load  data from azure sql db data to ADLS  with change data capture ",
				"activities": [
					{
						"name": "Last_cdc_Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Dataset_for_sql_db_cdc_date_json_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Total_results",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Last_cdc_Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Linked_service_for_Azure_sql_db_02",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "select count(*) as total_count from @{pipeline().parameters.Schema}.@{pipeline().parameters.table} WHERE last_updated > '@{if(empty(pipeline().parameters.backdate),activity('Last_cdc_Lookup1').output.firstRow.cdc_timestamp,pipeline().parameters.backdate)}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "if new rows greater than  0",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Total_results",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Total_results').output.resultSets[0].rows[0].total_count,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{pipeline().parameters.Schema}.@{pipeline().parameters.table} WHERE last_updated > '@{if(empty(pipeline().parameters.backdate),activity('Last_cdc_Lookup1').output.firstRow.cdc_timestamp,pipeline().parameters.backdate)}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlTable2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_for_sqldb_sink_Parquet1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "change cdc",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "max_cdc",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "cdc_timestamp",
													"value": {
														"value": "@activity('max_cdc').output.resultSets[0].rows[0].cdc_timestamp",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "dataset_for_empty_json_file",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Dataset_for_sql_db_cdc_date_json_file",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "max_cdc",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "Linked_service_for_Azure_sql_db_02",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "select max(last_updated) as cdc_timestamp from @{pipeline().parameters.Schema}.@{pipeline().parameters.table}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Schema": {
						"type": "string",
						"defaultValue": "source"
					},
					"table": {
						"type": "string",
						"defaultValue": "Orders"
					},
					"backdate": {
						"type": "string"
					}
				},
				"variables": {
					"test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SQL DB To Parquet Incremental  Pipeline/Ingestion"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_for_sql_db_cdc_date_json_file')]",
				"[concat(variables('factoryId'), '/linkedServices/Linked_service_for_Azure_sql_db_02')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/dataset_for_sqldb_sink_Parquet1')]",
				"[concat(variables('factoryId'), '/datasets/dataset_for_empty_json_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure_Sql_sales_Database01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReturnDate",
						"type": "date"
					},
					{
						"name": "TerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReturnQuantity",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().Table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure_Sql_sales_Database01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_service_for_Azure_sql_db_02",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL DB To Parquet Incremental  Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "order_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_name",
						"type": "varchar"
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "price",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "order_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "last_updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "source",
					"table": "Orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_service_for_Azure_sql_db_02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_for_adls_gen2_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_service_for_AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file": {
						"type": "string"
					},
					"p_folder": {
						"type": "string"
					},
					"p_container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_service_for_AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_for_sql_db_cdc_date_json_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_service_for_AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL DB To Parquet Incremental  Datasets"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cdc.json",
						"folderPath": "monitor",
						"fileSystem": "sqldb2source"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"cdc_timestamp": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_service_for_AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_for_empty_json_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_service_for_AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL DB To Parquet Incremental  Datasets"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "empty.json",
						"folderPath": "monitor",
						"fileSystem": "sqldb2source"
					}
				},
				"schema": {
					"type": "object"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_service_for_AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_for_http_server_rest_api')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_service_for_HttpServer1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "/syam-yem/ADF_pipelines_for_different_scenarios/tree/main/ADF_datasets/@{dataset().p_file_name}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_service_for_HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_for_sqldb_sink_Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_service_for_AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL DB To Parquet Incremental  Datasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "orders",
						"fileSystem": "sqldb2destination"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_service_for_AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Sql_sales_Database01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Azure_Sql_sales_Database01_properties_typeProperties_server')]",
					"database": "[parameters('Azure_Sql_sales_Database01_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Azure_Sql_sales_Database01_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Azure_Sql_sales_Database01_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_service_for_AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Linked_service_for_AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Linked_service_for_AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_service_for_Azure_sql_db_02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Th9is linked service is for the Azure sql db 02 to connect with ADF ",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Linked_service_for_Azure_sql_db_02_properties_typeProperties_server')]",
					"database": "[parameters('Linked_service_for_Azure_sql_db_02_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Linked_service_for_Azure_sql_db_02_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Linked_service_for_azure_key_vault_sql_db",
							"type": "LinkedServiceReference"
						},
						"secretName": "sqldbpassword01",
						"secretVersion": "f32388c3b0f84dcbaaf18c0c6676715a"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_service_for_azure_key_vault_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_service_for_HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Linked_service_for_HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_service_for_azure_key_vault_sql_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked service for azure key vault SQL DB password",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Linked_service_for_azure_key_vault_sql_db_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Schedule trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline_for_http_rest_api_file_transfer",
							"type": "PipelineReference"
						},
						"parameters": {
							"loop_value": "[parameters('Schedule trigger_properties_Pipeline_for_http_rest_api_file_transfer_parameters_loop_value')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-09-26T16:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								10
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pipeline_for_http_rest_api_file_transfer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfintegrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Scheduled_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "EXECUTE_Pipeline_to_load_AZ_sql_db_data_to_ADLS_with_CDC",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 16,
						"startTime": "2025-09-29T17:05:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/EXECUTE_Pipeline_to_load_AZ_sql_db_data_to_ADLS_with_CDC')]"
			]
		}
	]
}